{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mythili G\\\\Desktop\\\\react-practice\\\\zomato\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport { FormControl, FormLabel } from \"@mui/material\";\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\nimport { json, useNavigate } from \"react-router-dom\";\n\n// import \"./signup.css\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst redTheme = createTheme({\n  palette: {\n    primary: red\n  }\n});\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch(\"http://localhost:9000/rest/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: email,\n        password: password\n      }),\n      headers: {\n        \"content-type\": \"application/JSON\"\n      }\n    }).then(res => res.json()).then(a => {\n      console.log(a);\n      localStorage.setItem(\"token\", JSON.stringify(a));\n      navigate(\"/\");\n    });\n\n    // .then(res=>\n    // {if(res.ok){\n    // const contentType=res.headers.get(\"content-type\");\n    // if(contentType.includes(\"application/json\")){\n    //   return res.json();\n    // }\n    // else{\n    //   return res.text();\n    // }\n    // else if(contentType.includes(\"text/plain\")){\n    //   return res.text();\n    // }\n    // else{\n    //   throw new Error(\"unsupported content type\")\n    // }\n    // }\n    // else{\n    //   throw new Error(\"http error\",+res.status)\n    // }\n    // }\n    // )\n    // .then(a=>{console.log(a);localStorage.setItem(\"token\",JSON.stringify(a));navigate(\"/\")})\n    // .catch(err=>console.log(err))\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      onSubmit: handleSubmit,\n      sx: {\n        \"& .MuiTextField-root\": {\n          m: 1,\n          width: \"65ch\"\n        },\n        marginTop: \"50px\"\n      }\n      //   noValidate\n      //   autoComplete=\"off\"\n      ,\n      style: {\n        textAlign: \"center\",\n        color: \"red\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\",\n          color: \"red\"\n        },\n        children: \"Login form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"filled-required\",\n            label: \"Enter Email\"\n            //    defaultValue=\"Hello World\"\n            ,\n            variant: \"filled\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"filled-password-input\",\n            label: \"Enter password\",\n            type: \"password\"\n            // autoComplete=\"current-password\"\n            ,\n            variant: \"filled\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n            theme: redTheme,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"primary\",\n              type: \"submit\",\n              style: {\n                marginTop: \"20px\"\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this)\n  }, void 0, false);\n};\n_s(Login, \"gZ4aa2JDg+xRk4lZ1fqs+oKjlr0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","FormControl","FormLabel","createTheme","ThemeProvider","red","json","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","redTheme","palette","primary","Login","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","a","console","log","localStorage","setItem","children","component","onSubmit","sx","m","width","marginTop","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","required","id","label","variant","type","value","onChange","target","theme","_c","$RefreshReg$"],"sources":["C:/Users/Mythili G/Desktop/react-practice/zomato/src/components/Login.js"],"sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { FormControl, FormLabel } from \"@mui/material\";\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\nimport { json, useNavigate } from \"react-router-dom\";\r\n\r\n// import \"./signup.css\"\r\n\r\n\r\nconst redTheme = createTheme({ palette: { primary: red } })\r\n\r\nconst Login=()=>{\r\n\r\n  const [email,setEmail]=useState();\r\nconst [password,setPassword]=useState();\r\nconst navigate=useNavigate()\r\n\r\nconst handleSubmit=async(e)=>{\r\n  e.preventDefault();\r\nawait fetch(\"http://localhost:9000/rest/login\",{\r\nmethod:\"POST\",\r\nbody:JSON.stringify({email:email,password:password}),\r\nheaders:{\r\n\"content-type\":\"application/JSON\"\r\n}\r\n  })\r\n  .then(res=>res.json())\r\n  .then(a=>{console.log(a);localStorage.setItem(\"token\",JSON.stringify(a));navigate(\"/\")})\r\n\r\n  // .then(res=>\r\n  // {if(res.ok){\r\n  // const contentType=res.headers.get(\"content-type\");\r\n  // if(contentType.includes(\"application/json\")){\r\n  //   return res.json();\r\n  // }\r\n  // else{\r\n  //   return res.text();\r\n  // }\r\n    // else if(contentType.includes(\"text/plain\")){\r\n    //   return res.text();\r\n    // }\r\n    // else{\r\n    //   throw new Error(\"unsupported content type\")\r\n    // }\r\n// }\r\n// else{\r\n//   throw new Error(\"http error\",+res.status)\r\n// }\r\n// }\r\n// )\r\n// .then(a=>{console.log(a);localStorage.setItem(\"token\",JSON.stringify(a));navigate(\"/\")})\r\n// .catch(err=>console.log(err))\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n         <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit}\r\n      \r\n      sx={{\r\n        \"& .MuiTextField-root\": { m: 1, width: \"65ch\" },marginTop:\"50px\"\r\n      }}\r\n    //   noValidate\r\n    //   autoComplete=\"off\"\r\n      style={{ textAlign: \"center\",color:\"red\" }}\r\n      \r\n    >\r\n      <h1 style={{ textAlign: \"center\",color:\"red\" }}>Login form</h1>\r\n\r\n\r\n        <div>\r\n          <FormControl>\r\n            {/* <FormLabel style={{textAlign:\"left\"}}>Enter Email:</FormLabel> */}\r\n            <TextField\r\n              required\r\n              id=\"filled-required\"\r\n              label=\"Enter Email\"\r\n              //    defaultValue=\"Hello World\"\r\n              variant=\"filled\"\r\n             type=\"email\"\r\n             value={email}\r\n             onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n\r\n\r\n        <div>\r\n          <FormControl>\r\n            {/* <FormLabel style={{textAlign:\"left\"}}>Enter password</FormLabel> */}\r\n            <TextField\r\n            required\r\n              id=\"filled-password-input\"\r\n              label=\"Enter password\"\r\n              type=\"password\"\r\n              // autoComplete=\"current-password\"\r\n              variant=\"filled\"\r\n              value={password}\r\n              onChange={(e)=>setPassword(e.target.value)}\r\n            />\r\n          </FormControl>\r\n        </div>\r\n        <div>\r\n        <FormControl>\r\n        <ThemeProvider theme={redTheme}>\r\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\" style={{marginTop:\"20px\"}}>\r\n        Submit\r\n      </Button>\r\n      \r\n      </ThemeProvider>\r\n        </FormControl>\r\n        \r\n        </div>\r\n      {/* </form> */}\r\n    </Box>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
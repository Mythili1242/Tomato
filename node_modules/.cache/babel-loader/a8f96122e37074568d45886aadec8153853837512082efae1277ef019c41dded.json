{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mythili G\\\\Desktop\\\\react-practice\\\\zomato\\\\src\\\\components\\\\Cards.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Cards(_ref) {\n  let {\n    food\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: food.map((item, k) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '22rem',\n            border: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: item.imgdata,\n            className: \"cardimg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"uppertext\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"restaurant\",\n                children: item.rname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"rating\",\n                children: [item.rating, \"\\u2729\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 22,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"middletext\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"cuisine\",\n                children: item.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"cost\",\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n}\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_ref","food","children","map","item","k","style","width","border","Img","variant","src","imgdata","className","fileName","_jsxFileName","lineNumber","columnNumber","Body","rname","rating","address","price","_c","$RefreshReg$"],"sources":["C:/Users/Mythili G/Desktop/react-practice/zomato/src/components/Cards.js"],"sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nfunction Cards({food}) {\r\n  return (\r\n   <>\r\n    {food.map((item,k)=>{\r\n    return(\r\n      <>\r\n     \r\n            <Card style={{ width: '22rem', border:\"none\" }}>\r\n      <Card.Img variant=\"top\" src={item.imgdata} className='cardimg' />\r\n      <Card.Body>\r\n        {/* <Card.Title>Card Title</Card.Title> */}\r\n        {/* <Card.Text>\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </Card.Text> */}\r\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n        <div className=\"uppertext\">\r\n            <p className=\"restaurant\">{item.rname}</p>\r\n            <p className=\"rating\">{item.rating}âœ©</p>\r\n        </div>\r\n        <div className=\"middletext\">\r\n            <p className=\"cuisine\">{item.address}</p>\r\n            <p className=\"cost\">{item.price}</p>\r\n        </div>\r\n\r\n        <div className=\"line\"></div>\r\n\r\n        <div className='lower'></div>\r\n      </Card.Body>\r\n    </Card>\r\n\r\n         \r\n      </>\r\n    )\r\n      })}\r\n   </>\r\n  )\r\n}\r\n\r\nexport default Cards"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,KAAKA,CAAAC,IAAA,EAAS;EAAA,IAAR;IAACC;EAAI,CAAC,GAAAD,IAAA;EACnB,oBACCJ,OAAA,CAAAE,SAAA;IAAAI,QAAA,EACED,IAAI,CAACE,GAAG,CAAC,CAACC,IAAI,EAACC,CAAC,KAAG;MACpB,oBACET,OAAA,CAAAE,SAAA;QAAAI,QAAA,eAEMN,OAAA,CAACF,IAAI;UAACY,KAAK,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEC,MAAM,EAAC;UAAO,CAAE;UAAAN,QAAA,gBACrDN,OAAA,CAACF,IAAI,CAACe,GAAG;YAACC,OAAO,EAAC,KAAK;YAACC,GAAG,EAAEP,IAAI,CAACQ,OAAQ;YAACC,SAAS,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjErB,OAAA,CAACF,IAAI,CAACwB,IAAI;YAAAhB,QAAA,gBAORN,OAAA;cAAKiB,SAAS,EAAC,WAAW;cAAAX,QAAA,gBACtBN,OAAA;gBAAGiB,SAAS,EAAC,YAAY;gBAAAX,QAAA,EAAEE,IAAI,CAACe;cAAK;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1CrB,OAAA;gBAAGiB,SAAS,EAAC,QAAQ;gBAAAX,QAAA,GAAEE,IAAI,CAACgB,MAAM,EAAC,QAAC;cAAA;gBAAAN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACNrB,OAAA;cAAKiB,SAAS,EAAC,YAAY;cAAAX,QAAA,gBACvBN,OAAA;gBAAGiB,SAAS,EAAC,SAAS;gBAAAX,QAAA,EAAEE,IAAI,CAACiB;cAAO;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACzCrB,OAAA;gBAAGiB,SAAS,EAAC,MAAM;gBAAAX,QAAA,EAAEE,IAAI,CAACkB;cAAK;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC,eAENrB,OAAA;cAAKiB,SAAS,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAE5BrB,OAAA;cAAKiB,SAAS,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,gBAGH,CAAC;IAEH,CAAC;EAAC,gBACH,CAAC;AAEN;AAACM,EAAA,GArCQxB,KAAK;AAuCd,eAAeA,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}